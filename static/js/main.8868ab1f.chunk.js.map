{"version":3,"sources":["components/Song.js","components/SearchBar.js","components/SongList.js","components/VolumeSlider.js","components/SongTrack.js","components/CurrentSong.js","SongData.js","index.js"],"names":["Song","this","props","songData","name","artist","key","album","isCurrentSong","isPlaying","className","onClick","icon","faPause","faPlay","React","Component","SearchBar","searchVal","console","log","contentEditable","onInput","e","findSongs","target","innerText","Header","SongList","songs","map","song","index","currentSongKey","pausePlay","VolumeSLider","state","volume","setState","onChange","faVolumeUp","faVolumeDown","faVolumeMute","mute","type","min","max","step","value","adjustVol","getTime","sec_num","hours","Math","floor","minutes","seconds","SongTrack","trackTime","songDuration","setTrackTime","SongTitle","CurrentSong","currentTrackTime","audioPlayer","ontimeupdate","currentTime","alt","src","cover","isPlaceholder","faStepBackward","onNext","faStepForward","VolumeSlider","vol","onChangeVolume","duration","newTime","onSetTrackTime","URL","process","SongData","audioFile","playing","i","length","getSongs","PlaceHolder","App","audio","Audio","onended","advanceSong","currentPlaying","play","pause","direction","nextSong","dir","onSort","updatedList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8868ab1f.chunk.js","sourcesContent":["import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlay, faPause } from '@fortawesome/free-solid-svg-icons'\n\nclass Song extends React.Component{\n    render(){\n\n\t\tlet { name, artist, key, album } = this.props.songData;\n\n\t\tlet isCurrentSong = this.props.isCurrentSong;\n\t\tlet isPlaying = ( this.props.isPlaying && isCurrentSong ) ? true : false;\n\n\t\treturn(\n\t\t\t<div className={ 'song-entry ' + ( isCurrentSong ? 'song-playing' : '') }\n\t\t\t\tonClick={ ()=>{ this.props.onClick( key ) }} \n\t\t\t\t >\n\t\t\t\t<FontAwesomeIcon\n\t\t\t\t\ticon={ isPlaying ? faPause : faPlay } \n\t\t\t\t\tclassName='play-button'  />\n                <span className='song-data name'>{ name }</span>\n                <span className='song-data artist'>{ artist }</span>\n                <span className='song-data album'>{ album.name }</span>\n            </div>\n        )\n    }  \n}\n\nexport default Song","import React from 'react'\r\nclass SearchBar extends React.Component{\r\n\t\r\n\tfindSongs( searchVal ){\r\n\t\tconsole.log( searchVal )\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div \r\n\t\t\t\tclassName='song-search'\r\n\t\t\t\tcontentEditable \r\n\t\t\t\tonInput={(e)=>{ this.findSongs( e.target.innerText ) }}\r\n\t\t\t></div>\r\n\t\t)\r\n\t}\r\n}\r\nexport default SearchBar\t","import React from 'react'\nimport '../css/songs.scss'\nimport Song from './Song'\nimport SearchBar from './SearchBar'\n\nclass SongList extends React.Component{\n\n    render(){\n        let songs = this.props.songs.map(( song, index ) => {\n\t\t\t\n\t\t\tsong.key = index;\n\t\t\tlet isCurrentSong = this.props.currentSongKey === index ? true : false;\n\n            return(\n\t\t\t   <Song songData={ song }\n\t\t\t   \t\tisCurrentSong = { isCurrentSong } \n\t\t\t\t\tkey={ index }\n\t\t\t\t\tisPlaying={ this.props.isPlaying }\n\t\t\t   \t\tonClick={ ( key )=>{ this.props.pausePlay( key ) }} \n\t\t\t\t/>\n            )\n        })\n        return(\n            <div className='song-cont'>\n                <Header />\n                { songs }\n            </div>\n        )\n    }\n}\n\nfunction Header(){\n    return(\n\t\t<div>\n\t\t\t<SearchBar />\n\t\t\t<span className={ 'song-entry header'}>\n\t\t\t\t<span>&nbsp;</span>\n\t\t\t\t<span>Title</span>\n\t\t\t\t<span>Artist</span>\n\t\t\t\t<span>Album</span>\n\t\t\t</span>\n\t\t</div>\n      \n    )\n}\n\nexport default SongList","import React from 'react'\r\nimport '../css/volumeSlider.scss'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faVolumeUp, faVolumeMute, faVolumeDown } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nclass VolumeSLider extends React.Component{\r\n\tconstructor( props ){\r\n\t\tsuper( props )\r\n\t\tthis.state= {\r\n\t\t\tvolume: .5\r\n\t\t}\r\n\t}\r\n\r\n\tadjustVol( volume ){\r\n\t\tthis.setState({\r\n\t\t\tvolume: volume\r\n\t\t})\r\n\t\tthis.props.onChange( volume )\r\n\t}\r\n\r\n\tmute(){\r\n\t\tthis.setState({\r\n\t\t\tvolume: 0\r\n\t\t})\t\r\n\t\tthis.props.onChange( 0 )\r\n\t}\r\n\trender(){\r\n\r\n\t\tlet icon = null;\r\n\t\tif( this.state.volume > .49 ) icon = faVolumeUp;\t\r\n\t\telse if( this.state.volume >= 0 ) icon = faVolumeDown;\r\n\t\telse if( this.state.volume === 0 ) icon = faVolumeMute;\t\r\n\r\n\t\treturn(\r\n\t\t\t<div className=\"slidecontainer\">\r\n\t\t\t\t<FontAwesomeIcon \r\n\t\t\t\t\tonClick={ ()=>{ this.mute() }}\r\n\t\t\t\t\ticon={ icon } \r\n\t\t\t\t\tclassName='mute-button'\r\n\t\t\t\t/>\r\n\t\t\t\t<input type=\"range\"\r\n\t\t\t\t\tmin=\"0\" \r\n\t\t\t\t\tmax=\"1\" \r\n\t\t\t\t\tstep='.01' \r\n\t\t\t\t\tvalue={ this.state.volume } \r\n\t\t\t\t\tclassName=\"volume-slider\"\r\n\t\t\t\t\tonChange={ (e)=>{ this.adjustVol( e.target.value ) }}/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\nexport default VolumeSLider","import React from 'react'\r\nimport '../css/songtrack.scss'\r\n\r\nclass SongTrack extends React.Component{\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div className='track-slider-container'>\r\n\t\t\t\t<div>{ getTime( this.props.trackTime ) }</div>\t\r\n\t\t\t\t<input type='range' \r\n\t\t\t\t\tclassName='track-slider' \r\n\t\t\t\t\tmax={ this.props.songDuration }\r\n\t\t\t\t\tmin='0'\r\n\t\t\t\t\tvalue={ this.props.trackTime }\r\n\t\t\t\t\tonChange={ (e)=>{ this.props.setTrackTime( e.target.value ) }} /> \r\n\t\t\t\t\t<div>{ getTime( this.props.songDuration - this.props.trackTime ) }</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nfunction getTime( sec_num ){\r\n\tvar hours = Math.floor( sec_num / 3600 );\r\n    var minutes = Math.floor(( sec_num - ( hours * 3600 )) / 60 );\r\n    var seconds = Math.floor( sec_num - ( hours * 3600 ) - ( minutes * 60 ));\r\n\r\n    if ( minutes < 10 ) minutes = \"0\" + minutes;\r\n    if ( seconds < 10 ) seconds = \"0\" + seconds;\r\n    return minutes + ':' + seconds ;\r\n}\r\nexport default SongTrack","import React from \"react\"\r\nimport '../css/currentSong.scss'\r\nimport VolumeSlider from './VolumeSlider'\r\nimport SongTrack from './SongTrack'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlay, faPause, faStepBackward, faStepForward } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass CurrentSong extends React.Component{\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\t\tthis.state={\r\n\t\t\tcurrentTrackTime: 0\r\n\t\t}\r\n\t\tthis.props.audioPlayer.ontimeupdate = () =>{\r\n\t\t\tthis.setState({\r\n\t\t\t\tcurrentTrackTime: this.props.audioPlayer.currentTime,\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\trender(){\r\n\t\tlet song = this.props.song;\r\n\t\treturn(\r\n\t\t\t<div className='current-song'>\r\n\t\t\t\t\r\n\t\t\t\t<div className='song-cover'>\r\n\t\t\t\t\t<img alt={ song.album.name } src={ song.album.cover } />\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className={'song-info-cont' + ( ! song.isPlaceholder ? ' show' : '' ) }>\r\n\t\t\t\t\t<div className='song-info'>\r\n\r\n\t\t\t\t\t\t<SongTitle song={ song } />\r\n\r\n\t\t\t\t\t\t<div className='song-controls-cont'>\r\n\t\t\t\t\t\t\t<div className='song-controls'>\r\n\r\n\t\t\t\t\t\t\t\t<FontAwesomeIcon\r\n\t\t\t\t\t\t\t\t\tclassName='pause-play-control'\r\n\t\t\t\t\t\t\t\t\ticon={ faStepBackward }\r\n\t\t\t\t\t\t\t\t\tonClick={ ()=> { this.props.onNext( -1 ) }} \r\n\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t<FontAwesomeIcon\r\n\t\t\t\t\t\t\t\t\tclassName='pause-play-control'\r\n\t\t\t\t\t\t\t\t\ticon={ this.props.isPlaying ? faPause : faPlay }\r\n\t\t\t\t\t\t\t\t\tonClick={ ()=> { this.props.pausePlay() }} \r\n\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t<FontAwesomeIcon\r\n\t\t\t\t\t\t\t\t\tclassName='pause-play-control'\r\n\t\t\t\t\t\t\t\t\ticon={ faStepForward }\r\n\t\t\t\t\t\t\t\t\tonClick={ ()=> { this.props.onNext( 1 ) }} \r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<VolumeSlider \r\n\t\t\t\t\t\t\t\t\tonChange={ ( vol )=>{ this.props.onChangeVolume( vol ) }}\r\n\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<SongTrack \r\n\t\t\t\t\t\t\t\tsongDuration={ this.props.audioPlayer.duration }\r\n\t\t\t\t\t\t\t\ttrackTime={ this.state.currentTrackTime }\r\n\t\t\t\t\t\t\t\tsetTrackTime={ (newTime)=>{ this.props.onSetTrackTime(newTime) } }\r\n\t\t\t\t\t\t\t\tsong={ this.props.songDuration}\r\n\t\t\t\t\t\t\t\tisPlaying={ this.props.isPlaying }\r\n\t\t\t\t\t\t\t\tpausePlay={()=>{ this.props.pausePlay() }}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t\t\t\r\n\t}\r\n}\r\n\r\nfunction SongTitle( props ){\r\n\tif( props.song.name !== '' ){\r\n\t\treturn(\r\n\t\t\t<div className='song-header'>\r\n\t\t\t\t<h1>{ props.song.name }</h1> \r\n\t\t\t\t<h2>{ props.song.artist } - { props.song.album.name }</h2>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}else{\r\n\t\treturn('')\r\n\t}\r\n}\r\n\r\n\r\nexport default CurrentSong","let URL = process.env.PUBLIC_URL;\r\nconst SongData = getSongs();\r\nconst PlaceHolder = getPlacholder();\r\n\r\nexport { PlaceHolder, SongData };\r\n\r\nfunction getSongs(){\r\n\tconst songs = [\r\n\t\t{\r\n\t\t\tname: 'Ocean Man',\r\n\t\t\tartist: 'Ween',\r\n\t\t\taudioFile: 'ween-ocean-man.mp3',\r\n\t\t\tplaying: false,\r\n\t\t\talbum: {\r\n\t\t\t\tcover: 'ween-cover.jpg',\r\n\t\t\t\tname: 'The Mollusk'\r\n\t\t\t}\r\n\t\t},{\r\n\t\t\tname: 'Oh Darling',\r\n\t\t\tartist: 'Super Tramp',\r\n\t\t\taudioFile: 'supertramp-oh-darling.mp3',\r\n\t\t\tplaying: false,\r\n\t\t\talbum: {\r\n\t\t\t\tcover: 'supertramp-cover.jpg',\r\n\t\t\t\tname: 'Retrospectacle'\r\n\t\t\t}\r\n\t\t},{\r\n\t\t\tname: 'Dressed in Decay',\r\n\t\t\tartist: 'CKY',\r\n\t\t\taudioFile: 'cky-dressed-in-decay.mp3',\r\n\t\t\tplaying: false,\r\n\t\t\talbum: {\r\n\t\t\t\tcover: 'cky-cover.jpg',\r\n\t\t\t\tname: 'An Answer Can be Found'\r\n\t\t\t}\r\n\t\t}\r\n\t]\r\n\tfor( let i=0; i<songs.length; i++ ){\r\n\t\tsongs[i].audioFile = URL + '/song-files/' + songs[i].audioFile;\r\n\t\tsongs[i].album.cover = URL + '/album-covers/' + songs[i].album.cover;\r\n\t}\t\r\n\treturn songs;\r\n}\r\n\r\nfunction getPlacholder(){\r\n\treturn {\r\n\t\tisPlaceholder: true,\r\n\t\tname: '',\r\n\t\tartist: '',\r\n\t\taudioFile: '',\r\n\t\talbum: {\r\n\t\t\tcover: URL + '/album-covers/placeholder.jpg',\r\n\t\t\tname: ''\r\n\t\t}\r\n\t}\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport SongList from './components/SongList';\nimport CurrentSong from './components/CurrentSong'\nimport { SongData, PlaceHolder } from './SongData';\n\nimport './css/App.scss';\nimport './css/mediaqueries.scss'\nclass App extends React.Component {\n\n\tconstructor( props ){\n\t\tsuper( props )\n\n\t\t// Master audio player\n\t\tthis.audio = new Audio();\n\t\tthis.audio.volume = 0.5;\n\n\t\tthis.audio.onended = () =>{\n\t\t\tthis.advanceSong( 1 )\n\t\t}\n\t\t\n        this.state={\n\t\t\tcurrentPlaying: PlaceHolder,\n\t\t\tisPlaying: false,\n            songs: SongData\n\t\t}\n\t}\n\t\n\tpausePlay( key = 0 ){\n\t\tlet isPlaying = this.state.isPlaying;\n\t\t\n\t\tif( key !== this.state.currentPlaying.key ){\n\t\t\tthis.audio.src = this.state.songs[ key ].audioFile;\n\t\t\tthis.audio.play();\n\t\t\tisPlaying = true;\n\t\t}else{\n\t\t\tif( this.state.isPlaying ){\n\t\t\t\tthis.audio.pause();\n\t\t\t\tisPlaying = false;\n\t\t\t}else{\n\t\t\t\tthis.audio.play();\n\t\t\t\tisPlaying = true;\n\t\t\t} \n\t\t}\n\n\t\tthis.setState({ \n\t\t\tcurrentPlaying: this.state.songs[ key ],\n\t\t\tisPlaying: isPlaying\n\t\t});\n\t}\n\n\tadvanceSong( direction ){\n\t\tlet nextSong = this.state.currentPlaying.key + direction;\n\n\t\tif( this.state.songs.length - 1 < nextSong )\n\t\t\tnextSong = 0;\n\t\tif( nextSong < 0)\n\t\t\tnextSong = this.state.songs.length - 1\n\n\t\tthis.audio.src = this.state.songs[ nextSong ].audioFile\n\t\tthis.audio.play();\n\t\tthis.setState({ \n\t\t\tcurrentPlaying: this.state.songs[ nextSong ]\n\t\t})\n\t}\n\n\trender(){\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<CurrentSong \n\t\t\t\t\taudioPlayer = { this.audio }\n\t\t\t\t\tsong={ this.state.currentPlaying }\n\t\t\t\t\tisPlaying={ this.state.isPlaying }\n\t\t\t\t\tsongDuration={ this.audio.duration }\n\t\t\t\t\tpausePlay={ ()=>{ this.pausePlay( this.state.currentPlaying.key ) }}\n\t\t\t\t\tonNext={ ( dir )=>{ this.advanceSong( dir ) }}\n\t\t\t\t\tonChangeVolume={ ( volume )=>{ this.audio.volume = volume }}\n\t\t\t\t\tonSetTrackTime={ ( newTime )=>{ this.audio.currentTime = newTime }}  />\n\n\t\t\t\t<SongList\n\t\t\t\t\tcurrentSongKey = { this.state.currentPlaying.key }\n\t\t\t\t\tisPlaying={ this.state.isPlaying }\n\t\t\t\t\tpausePlay={ ( key )=>{ this.pausePlay( key ) }} \n\t\t\t\t\tsongs={ this.state.songs } \n\t\t\t\t\tonSort={ ( updatedList )=>{ this.setState({ songs:updatedList }) }  }\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}